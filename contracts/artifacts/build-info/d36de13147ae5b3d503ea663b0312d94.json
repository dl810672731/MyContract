{
	"id": "d36de13147ae5b3d503ea663b0312d94",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BoxV1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\ncontract BoxV1 is Initializable {\n    uint256 public x;\n\n    function initialize(uint256 _val) external initializer {\n        x = _val;\n    }\n\n    function call() external {\n        x = x + 1;\n    }\n\n    function showInvoke() external pure returns (bytes memory) {\n        return abi.encodeWithSelector(this.initialize.selector, 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BoxV1.sol": {
				"BoxV1": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "call",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showInvoke",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BoxV1.sol\":121:461  contract BoxV1 is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BoxV1.sol\":121:461  contract BoxV1 is Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c55699c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x28b5e32b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x75beac87\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfe4b84df\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BoxV1.sol\":159:175  uint256 public x */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BoxV1.sol\":268:319  function call() external {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/BoxV1.sol\":325:459  function showInvoke() external pure returns (bytes memory) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BoxV1.sol\":182:262  function initialize(uint256 _val) external initializer {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/BoxV1.sol\":159:175  uint256 public x */\n    tag_8:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/BoxV1.sol\":268:319  function call() external {... */\n    tag_12:\n        /* \"contracts/BoxV1.sol\":311:312  1 */\n      0x01\n        /* \"contracts/BoxV1.sol\":307:308  x */\n      sload(0x00)\n        /* \"contracts/BoxV1.sol\":307:312  x + 1 */\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"contracts/BoxV1.sol\":303:304  x */\n      0x00\n        /* \"contracts/BoxV1.sol\":303:312  x = x + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BoxV1.sol\":268:319  function call() external {... */\n      jump\t// out\n        /* \"contracts/BoxV1.sol\":325:459  function showInvoke() external pure returns (bytes memory) {... */\n    tag_14:\n        /* \"contracts/BoxV1.sol\":370:382  bytes memory */\n      0x60\n        /* \"contracts/BoxV1.sol\":424:448  this.initialize.selector */\n      shl(0xe0, 0xfe4b84df)\n        /* \"contracts/BoxV1.sol\":450:451  1 */\n      0x01\n        /* \"contracts/BoxV1.sol\":401:452  abi.encodeWithSelector(this.initialize.selector, 1) */\n      add(0x24, mload(0x40))\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BoxV1.sol\":394:452  return abi.encodeWithSelector(this.initialize.selector, 1) */\n      swap1\n      pop\n        /* \"contracts/BoxV1.sol\":325:459  function showInvoke() external pure returns (bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BoxV1.sol\":182:262  function initialize(uint256 _val) external initializer {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_28\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_29\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_28:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_30\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_30:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_31:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_32\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_32:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_33\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_34:\n        /* \"contracts/BoxV1.sol\":251:255  _val */\n      dup6\n        /* \"contracts/BoxV1.sol\":247:248  x */\n      0x00\n        /* \"contracts/BoxV1.sol\":247:255  x = _val */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BoxV1.sol\":182:262  function initialize(uint256 _val) external initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_40:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_41:\n        /* \"#utility.yul\":177:201   */\n      tag_64\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_40\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_10:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_66\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_41\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:540   */\n    tag_42:\n        /* \"#utility.yul\":493:499   */\n      0x00\n        /* \"#utility.yul\":527:532   */\n      dup2\n        /* \"#utility.yul\":521:533   */\n      mload\n        /* \"#utility.yul\":511:533   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:714   */\n    tag_43:\n        /* \"#utility.yul\":629:640   */\n      0x00\n        /* \"#utility.yul\":663:669   */\n      dup3\n        /* \"#utility.yul\":658:661   */\n      dup3\n        /* \"#utility.yul\":651:670   */\n      mstore\n        /* \"#utility.yul\":703:707   */\n      0x20\n        /* \"#utility.yul\":698:701   */\n      dup3\n        /* \"#utility.yul\":694:708   */\n      add\n        /* \"#utility.yul\":679:708   */\n      swap1\n      pop\n        /* \"#utility.yul\":546:714   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":720:859   */\n    tag_44:\n        /* \"#utility.yul\":809:815   */\n      dup3\n        /* \"#utility.yul\":804:807   */\n      dup2\n        /* \"#utility.yul\":799:802   */\n      dup4\n        /* \"#utility.yul\":793:816   */\n      mcopy\n        /* \"#utility.yul\":850:851   */\n      0x00\n        /* \"#utility.yul\":841:847   */\n      dup4\n        /* \"#utility.yul\":836:839   */\n      dup4\n        /* \"#utility.yul\":832:848   */\n      add\n        /* \"#utility.yul\":825:852   */\n      mstore\n        /* \"#utility.yul\":720:859   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":865:967   */\n    tag_45:\n        /* \"#utility.yul\":906:912   */\n      0x00\n        /* \"#utility.yul\":957:959   */\n      0x1f\n        /* \"#utility.yul\":953:960   */\n      not\n        /* \"#utility.yul\":948:950   */\n      0x1f\n        /* \"#utility.yul\":941:946   */\n      dup4\n        /* \"#utility.yul\":937:951   */\n      add\n        /* \"#utility.yul\":933:961   */\n      and\n        /* \"#utility.yul\":923:961   */\n      swap1\n      pop\n        /* \"#utility.yul\":865:967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":973:1346   */\n    tag_46:\n        /* \"#utility.yul\":1059:1062   */\n      0x00\n        /* \"#utility.yul\":1087:1125   */\n      tag_72\n        /* \"#utility.yul\":1119:1124   */\n      dup3\n        /* \"#utility.yul\":1087:1125   */\n      tag_42\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1141:1211   */\n      tag_73\n        /* \"#utility.yul\":1204:1210   */\n      dup2\n        /* \"#utility.yul\":1199:1202   */\n      dup6\n        /* \"#utility.yul\":1141:1211   */\n      tag_43\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1134:1211   */\n      swap4\n      pop\n        /* \"#utility.yul\":1220:1285   */\n      tag_74\n        /* \"#utility.yul\":1278:1284   */\n      dup2\n        /* \"#utility.yul\":1273:1276   */\n      dup6\n        /* \"#utility.yul\":1266:1270   */\n      0x20\n        /* \"#utility.yul\":1259:1264   */\n      dup7\n        /* \"#utility.yul\":1255:1271   */\n      add\n        /* \"#utility.yul\":1220:1285   */\n      tag_44\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1310:1339   */\n      tag_75\n        /* \"#utility.yul\":1332:1338   */\n      dup2\n        /* \"#utility.yul\":1310:1339   */\n      tag_45\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1305:1308   */\n      dup5\n        /* \"#utility.yul\":1301:1340   */\n      add\n        /* \"#utility.yul\":1294:1340   */\n      swap2\n      pop\n        /* \"#utility.yul\":1063:1346   */\n      pop\n        /* \"#utility.yul\":973:1346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1661   */\n    tag_16:\n        /* \"#utility.yul\":1463:1467   */\n      0x00\n        /* \"#utility.yul\":1501:1503   */\n      0x20\n        /* \"#utility.yul\":1490:1499   */\n      dup3\n        /* \"#utility.yul\":1486:1504   */\n      add\n        /* \"#utility.yul\":1478:1504   */\n      swap1\n      pop\n        /* \"#utility.yul\":1550:1559   */\n      dup2\n        /* \"#utility.yul\":1544:1548   */\n      dup2\n        /* \"#utility.yul\":1540:1560   */\n      sub\n        /* \"#utility.yul\":1536:1537   */\n      0x00\n        /* \"#utility.yul\":1525:1534   */\n      dup4\n        /* \"#utility.yul\":1521:1538   */\n      add\n        /* \"#utility.yul\":1514:1561   */\n      mstore\n        /* \"#utility.yul\":1578:1654   */\n      tag_77\n        /* \"#utility.yul\":1649:1653   */\n      dup2\n        /* \"#utility.yul\":1640:1646   */\n      dup5\n        /* \"#utility.yul\":1578:1654   */\n      tag_46\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1570:1654   */\n      swap1\n      pop\n        /* \"#utility.yul\":1352:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1748:1865   */\n    tag_48:\n        /* \"#utility.yul\":1857:1858   */\n      0x00\n        /* \"#utility.yul\":1854:1855   */\n      dup1\n        /* \"#utility.yul\":1847:1859   */\n      revert\n        /* \"#utility.yul\":1994:2116   */\n    tag_50:\n        /* \"#utility.yul\":2067:2091   */\n      tag_82\n        /* \"#utility.yul\":2085:2090   */\n      dup2\n        /* \"#utility.yul\":2067:2091   */\n      tag_40\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2060:2065   */\n      dup2\n        /* \"#utility.yul\":2057:2092   */\n      eq\n        /* \"#utility.yul\":2047:2110   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2106:2107   */\n      0x00\n        /* \"#utility.yul\":2103:2104   */\n      dup1\n        /* \"#utility.yul\":2096:2108   */\n      revert\n        /* \"#utility.yul\":2047:2110   */\n    tag_83:\n        /* \"#utility.yul\":1994:2116   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2261   */\n    tag_51:\n        /* \"#utility.yul\":2168:2173   */\n      0x00\n        /* \"#utility.yul\":2206:2212   */\n      dup2\n        /* \"#utility.yul\":2193:2213   */\n      calldataload\n        /* \"#utility.yul\":2184:2213   */\n      swap1\n      pop\n        /* \"#utility.yul\":2222:2255   */\n      tag_85\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2222:2255   */\n      tag_50\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2122:2261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2267:2596   */\n    tag_19:\n        /* \"#utility.yul\":2326:2332   */\n      0x00\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"#utility.yul\":2363:2372   */\n      dup3\n        /* \"#utility.yul\":2354:2361   */\n      dup5\n        /* \"#utility.yul\":2350:2373   */\n      sub\n        /* \"#utility.yul\":2346:2378   */\n      slt\n        /* \"#utility.yul\":2343:2462   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":2381:2460   */\n      tag_88\n      tag_48\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2343:2462   */\n    tag_87:\n        /* \"#utility.yul\":2501:2502   */\n      0x00\n        /* \"#utility.yul\":2526:2579   */\n      tag_89\n        /* \"#utility.yul\":2571:2578   */\n      dup5\n        /* \"#utility.yul\":2562:2568   */\n      dup3\n        /* \"#utility.yul\":2551:2560   */\n      dup6\n        /* \"#utility.yul\":2547:2569   */\n      add\n        /* \"#utility.yul\":2526:2579   */\n      tag_51\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2516:2579   */\n      swap2\n      pop\n        /* \"#utility.yul\":2472:2589   */\n      pop\n        /* \"#utility.yul\":2267:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2782   */\n    tag_52:\n        /* \"#utility.yul\":2650:2727   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2647:2648   */\n      0x00\n        /* \"#utility.yul\":2640:2728   */\n      mstore\n        /* \"#utility.yul\":2747:2751   */\n      0x11\n        /* \"#utility.yul\":2744:2745   */\n      0x04\n        /* \"#utility.yul\":2737:2752   */\n      mstore\n        /* \"#utility.yul\":2771:2775   */\n      0x24\n        /* \"#utility.yul\":2768:2769   */\n      0x00\n        /* \"#utility.yul\":2761:2776   */\n      revert\n        /* \"#utility.yul\":2788:2979   */\n    tag_23:\n        /* \"#utility.yul\":2828:2831   */\n      0x00\n        /* \"#utility.yul\":2847:2867   */\n      tag_92\n        /* \"#utility.yul\":2865:2866   */\n      dup3\n        /* \"#utility.yul\":2847:2867   */\n      tag_40\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2842:2867   */\n      swap2\n      pop\n        /* \"#utility.yul\":2881:2901   */\n      tag_93\n        /* \"#utility.yul\":2899:2900   */\n      dup4\n        /* \"#utility.yul\":2881:2901   */\n      tag_40\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2876:2901   */\n      swap3\n      pop\n        /* \"#utility.yul\":2924:2925   */\n      dup3\n        /* \"#utility.yul\":2921:2922   */\n      dup3\n        /* \"#utility.yul\":2917:2926   */\n      add\n        /* \"#utility.yul\":2910:2926   */\n      swap1\n      pop\n        /* \"#utility.yul\":2945:2948   */\n      dup1\n        /* \"#utility.yul\":2942:2943   */\n      dup3\n        /* \"#utility.yul\":2939:2949   */\n      gt\n        /* \"#utility.yul\":2936:2972   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2952:2970   */\n      tag_95\n      tag_52\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2936:2972   */\n    tag_94:\n        /* \"#utility.yul\":2788:2979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2985:3070   */\n    tag_53:\n        /* \"#utility.yul\":3030:3037   */\n      0x00\n        /* \"#utility.yul\":3059:3064   */\n      dup2\n        /* \"#utility.yul\":3048:3064   */\n      swap1\n      pop\n        /* \"#utility.yul\":2985:3070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3076:3162   */\n    tag_54:\n        /* \"#utility.yul\":3111:3118   */\n      0x00\n        /* \"#utility.yul\":3151:3155   */\n      0xff\n        /* \"#utility.yul\":3144:3149   */\n      dup3\n        /* \"#utility.yul\":3140:3156   */\n      and\n        /* \"#utility.yul\":3129:3156   */\n      swap1\n      pop\n        /* \"#utility.yul\":3076:3162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3168:3228   */\n    tag_55:\n        /* \"#utility.yul\":3196:3199   */\n      0x00\n        /* \"#utility.yul\":3217:3222   */\n      dup2\n        /* \"#utility.yul\":3210:3222   */\n      swap1\n      pop\n        /* \"#utility.yul\":3168:3228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3234:3388   */\n    tag_56:\n        /* \"#utility.yul\":3290:3299   */\n      0x00\n        /* \"#utility.yul\":3323:3382   */\n      tag_100\n        /* \"#utility.yul\":3339:3381   */\n      tag_101\n        /* \"#utility.yul\":3348:3380   */\n      tag_102\n        /* \"#utility.yul\":3374:3379   */\n      dup5\n        /* \"#utility.yul\":3348:3380   */\n      tag_53\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3339:3381   */\n      tag_55\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3323:3382   */\n      tag_54\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3310:3382   */\n      swap1\n      pop\n        /* \"#utility.yul\":3234:3388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3394:3537   */\n    tag_57:\n        /* \"#utility.yul\":3487:3530   */\n      tag_104\n        /* \"#utility.yul\":3524:3529   */\n      dup2\n        /* \"#utility.yul\":3487:3530   */\n      tag_56\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3482:3485   */\n      dup3\n        /* \"#utility.yul\":3475:3531   */\n      mstore\n        /* \"#utility.yul\":3394:3537   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3543:3777   */\n    tag_26:\n        /* \"#utility.yul\":3642:3646   */\n      0x00\n        /* \"#utility.yul\":3680:3682   */\n      0x20\n        /* \"#utility.yul\":3669:3678   */\n      dup3\n        /* \"#utility.yul\":3665:3683   */\n      add\n        /* \"#utility.yul\":3657:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3693:3770   */\n      tag_106\n        /* \"#utility.yul\":3767:3768   */\n      0x00\n        /* \"#utility.yul\":3756:3765   */\n      dup4\n        /* \"#utility.yul\":3752:3769   */\n      add\n        /* \"#utility.yul\":3743:3749   */\n      dup5\n        /* \"#utility.yul\":3693:3770   */\n      tag_57\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3543:3777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3783:3884   */\n    tag_58:\n        /* \"#utility.yul\":3819:3826   */\n      0x00\n        /* \"#utility.yul\":3859:3877   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3852:3857   */\n      dup3\n        /* \"#utility.yul\":3848:3878   */\n      and\n        /* \"#utility.yul\":3837:3878   */\n      swap1\n      pop\n        /* \"#utility.yul\":3783:3884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3890:4046   */\n    tag_59:\n        /* \"#utility.yul\":3947:3956   */\n      0x00\n        /* \"#utility.yul\":3980:4040   */\n      tag_109\n        /* \"#utility.yul\":3997:4039   */\n      tag_110\n        /* \"#utility.yul\":4006:4038   */\n      tag_111\n        /* \"#utility.yul\":4032:4037   */\n      dup5\n        /* \"#utility.yul\":4006:4038   */\n      tag_53\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3997:4039   */\n      tag_55\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3980:4040   */\n      tag_58\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3967:4040   */\n      swap1\n      pop\n        /* \"#utility.yul\":3890:4046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4052:4197   */\n    tag_60:\n        /* \"#utility.yul\":4146:4190   */\n      tag_113\n        /* \"#utility.yul\":4184:4189   */\n      dup2\n        /* \"#utility.yul\":4146:4190   */\n      tag_59\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4141:4144   */\n      dup3\n        /* \"#utility.yul\":4134:4191   */\n      mstore\n        /* \"#utility.yul\":4052:4197   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4439   */\n    tag_38:\n        /* \"#utility.yul\":4303:4307   */\n      0x00\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4330:4339   */\n      dup3\n        /* \"#utility.yul\":4326:4344   */\n      add\n        /* \"#utility.yul\":4318:4344   */\n      swap1\n      pop\n        /* \"#utility.yul\":4354:4432   */\n      tag_115\n        /* \"#utility.yul\":4429:4430   */\n      0x00\n        /* \"#utility.yul\":4418:4427   */\n      dup4\n        /* \"#utility.yul\":4414:4431   */\n      add\n        /* \"#utility.yul\":4405:4411   */\n      dup5\n        /* \"#utility.yul\":4354:4432   */\n      tag_60\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4203:4439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220121333edb54492846cdd486af3e21ee881f97e340413818406417aa01c10af3164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506105608061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630c55699c1461004e57806328b5e32b1461006c57806375beac8714610076578063fe4b84df14610094575b5f80fd5b6100566100b0565b6040516100639190610305565b60405180910390f35b6100746100b5565b005b61007e6100ca565b60405161008b919061038e565b60405180910390f35b6100ae60048036038101906100a991906103dc565b610148565b005b5f5481565b60015f546100c39190610434565b5f81905550565b606063fe4b84df60e01b60016040516024016100e691906104b5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905090565b5f6101516102c6565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156101995750825b90505f60018367ffffffffffffffff161480156101cc57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156101da575080155b15610211576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561025e576001855f0160086101000a81548160ff0219169083151502179055505b855f8190555083156102be575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516102b59190610511565b60405180910390a15b505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f819050919050565b6102ff816102ed565b82525050565b5f6020820190506103185f8301846102f6565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6103608261031e565b61036a8185610328565b935061037a818560208601610338565b61038381610346565b840191505092915050565b5f6020820190508181035f8301526103a68184610356565b905092915050565b5f80fd5b6103bb816102ed565b81146103c5575f80fd5b50565b5f813590506103d6816103b2565b92915050565b5f602082840312156103f1576103f06103ae565b5b5f6103fe848285016103c8565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61043e826102ed565b9150610449836102ed565b925082820190508082111561046157610460610407565b5b92915050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61049f61049a61049584610467565b61047c565b610470565b9050919050565b6104af81610485565b82525050565b5f6020820190506104c85f8301846104a6565b92915050565b5f67ffffffffffffffff82169050919050565b5f6104fb6104f66104f184610467565b61047c565b6104ce565b9050919050565b61050b816104e1565b82525050565b5f6020820190506105245f830184610502565b9291505056fea2646970667358221220121333edb54492846cdd486af3e21ee881f97e340413818406417aa01c10af3164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x560 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x28B5E32B EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x75BEAC87 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0xCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH4 0xFE4B84DF PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x151 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x199 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1CC JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1DA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x25E JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2BE JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FF DUP2 PUSH2 0x2ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x318 PUSH0 DUP4 ADD DUP5 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x360 DUP3 PUSH2 0x31E JUMP JUMPDEST PUSH2 0x36A DUP2 DUP6 PUSH2 0x328 JUMP JUMPDEST SWAP4 POP PUSH2 0x37A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x338 JUMP JUMPDEST PUSH2 0x383 DUP2 PUSH2 0x346 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3A6 DUP2 DUP5 PUSH2 0x356 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3BB DUP2 PUSH2 0x2ED JUMP JUMPDEST DUP2 EQ PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D6 DUP2 PUSH2 0x3B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F1 JUMPI PUSH2 0x3F0 PUSH2 0x3AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FE DUP5 DUP3 DUP6 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x43E DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP2 POP PUSH2 0x449 DUP4 PUSH2 0x2ED JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x407 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x49F PUSH2 0x49A PUSH2 0x495 DUP5 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AF DUP2 PUSH2 0x485 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x4A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4FB PUSH2 0x4F6 PUSH2 0x4F1 DUP5 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50B DUP2 PUSH2 0x4E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x524 PUSH0 DUP4 ADD DUP5 PUSH2 0x502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SGT CALLER 0xED 0xB5 PREVRANDAO SWAP3 DUP5 PUSH13 0xDD486AF3E21EE881F97E340413 DUP2 DUP5 MOD COINBASE PUSH27 0xA01C10AF3164736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "121:340:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getInitializableStorage_252": {
									"entryPoint": 710,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@call_282": {
									"entryPoint": 181,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_272": {
									"entryPoint": 328,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@showInvoke_296": {
									"entryPoint": 202,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@x_260": {
									"entryPoint": 176,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4442:2",
										"nodeType": "YulBlock",
										"src": "0:4442:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:2",
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nativeSrc": "62:16:2",
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:2",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nativeSrc": "155:53:2",
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nativeSrc": "177:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nativeSrc": "165:37:2",
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nativeSrc": "165:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:2",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:2",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nativeSrc": "312:124:2",
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nativeSrc": "322:26:2",
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:2",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nativeSrc": "330:18:2",
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:2",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nativeSrc": "411:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nativeSrc": "358:71:2",
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nativeSrc": "358:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:2",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:2",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:2",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nativeSrc": "500:40:2",
													"nodeType": "YulBlock",
													"src": "500:40:2",
													"statements": [
														{
															"nativeSrc": "511:22:2",
															"nodeType": "YulAssignment",
															"src": "511:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "527:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "527:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "521:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:5:2"
																},
																"nativeSrc": "521:12:2",
																"nodeType": "YulFunctionCall",
																"src": "521:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "511:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "442:98:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "483:5:2",
														"nodeType": "YulTypedName",
														"src": "483:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "493:6:2",
														"nodeType": "YulTypedName",
														"src": "493:6:2",
														"type": ""
													}
												],
												"src": "442:98:2"
											},
											{
												"body": {
													"nativeSrc": "641:73:2",
													"nodeType": "YulBlock",
													"src": "641:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "658:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "658:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "663:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "663:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "651:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:2"
																},
																"nativeSrc": "651:19:2",
																"nodeType": "YulFunctionCall",
																"src": "651:19:2"
															},
															"nativeSrc": "651:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "651:19:2"
														},
														{
															"nativeSrc": "679:29:2",
															"nodeType": "YulAssignment",
															"src": "679:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "698:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "698:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "703:4:2",
																		"nodeType": "YulLiteral",
																		"src": "703:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "694:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "694:3:2"
																},
																"nativeSrc": "694:14:2",
																"nodeType": "YulFunctionCall",
																"src": "694:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "679:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "679:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "546:168:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "613:3:2",
														"nodeType": "YulTypedName",
														"src": "613:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "618:6:2",
														"nodeType": "YulTypedName",
														"src": "618:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "629:11:2",
														"nodeType": "YulTypedName",
														"src": "629:11:2",
														"type": ""
													}
												],
												"src": "546:168:2"
											},
											{
												"body": {
													"nativeSrc": "782:77:2",
													"nodeType": "YulBlock",
													"src": "782:77:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "799:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "799:3:2"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "804:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "804:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "809:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "809:6:2"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "793:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "793:5:2"
																},
																"nativeSrc": "793:23:2",
																"nodeType": "YulFunctionCall",
																"src": "793:23:2"
															},
															"nativeSrc": "793:23:2",
															"nodeType": "YulExpressionStatement",
															"src": "793:23:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "836:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "836:3:2"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "841:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "832:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:2"
																		},
																		"nativeSrc": "832:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "832:16:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "850:1:2",
																		"nodeType": "YulLiteral",
																		"src": "850:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "825:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:2"
																},
																"nativeSrc": "825:27:2",
																"nodeType": "YulFunctionCall",
																"src": "825:27:2"
															},
															"nativeSrc": "825:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "825:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "720:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "764:3:2",
														"nodeType": "YulTypedName",
														"src": "764:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "769:3:2",
														"nodeType": "YulTypedName",
														"src": "769:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "774:6:2",
														"nodeType": "YulTypedName",
														"src": "774:6:2",
														"type": ""
													}
												],
												"src": "720:139:2"
											},
											{
												"body": {
													"nativeSrc": "913:54:2",
													"nodeType": "YulBlock",
													"src": "913:54:2",
													"statements": [
														{
															"nativeSrc": "923:38:2",
															"nodeType": "YulAssignment",
															"src": "923:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "941:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "941:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "948:2:2",
																				"nodeType": "YulLiteral",
																				"src": "948:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "937:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "937:3:2"
																		},
																		"nativeSrc": "937:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "937:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "957:2:2",
																				"nodeType": "YulLiteral",
																				"src": "957:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "953:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "953:3:2"
																		},
																		"nativeSrc": "953:7:2",
																		"nodeType": "YulFunctionCall",
																		"src": "953:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "933:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "933:3:2"
																},
																"nativeSrc": "933:28:2",
																"nodeType": "YulFunctionCall",
																"src": "933:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "923:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "865:102:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "896:5:2",
														"nodeType": "YulTypedName",
														"src": "896:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "906:6:2",
														"nodeType": "YulTypedName",
														"src": "906:6:2",
														"type": ""
													}
												],
												"src": "865:102:2"
											},
											{
												"body": {
													"nativeSrc": "1063:283:2",
													"nodeType": "YulBlock",
													"src": "1063:283:2",
													"statements": [
														{
															"nativeSrc": "1073:52:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1073:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1119:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1119:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "1087:31:2",
																	"nodeType": "YulIdentifier",
																	"src": "1087:31:2"
																},
																"nativeSrc": "1087:38:2",
																"nodeType": "YulFunctionCall",
																"src": "1087:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1077:6:2",
																	"nodeType": "YulTypedName",
																	"src": "1077:6:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1134:77:2",
															"nodeType": "YulAssignment",
															"src": "1134:77:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1199:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1199:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1204:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1204:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "1141:57:2",
																	"nodeType": "YulIdentifier",
																	"src": "1141:57:2"
																},
																"nativeSrc": "1141:70:2",
																"nodeType": "YulFunctionCall",
																"src": "1141:70:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1134:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1259:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1259:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1266:4:2",
																				"nodeType": "YulLiteral",
																				"src": "1266:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1255:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1255:3:2"
																		},
																		"nativeSrc": "1255:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1255:16:2"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1273:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1273:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1278:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1278:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1220:34:2",
																	"nodeType": "YulIdentifier",
																	"src": "1220:34:2"
																},
																"nativeSrc": "1220:65:2",
																"nodeType": "YulFunctionCall",
																"src": "1220:65:2"
															},
															"nativeSrc": "1220:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "1220:65:2"
														},
														{
															"nativeSrc": "1294:46:2",
															"nodeType": "YulAssignment",
															"src": "1294:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1305:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1305:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1332:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1310:21:2",
																			"nodeType": "YulIdentifier",
																			"src": "1310:21:2"
																		},
																		"nativeSrc": "1310:29:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1310:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1301:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1301:3:2"
																},
																"nativeSrc": "1301:39:2",
																"nodeType": "YulFunctionCall",
																"src": "1301:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1294:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "973:373:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1044:5:2",
														"nodeType": "YulTypedName",
														"src": "1044:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1051:3:2",
														"nodeType": "YulTypedName",
														"src": "1051:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1059:3:2",
														"nodeType": "YulTypedName",
														"src": "1059:3:2",
														"type": ""
													}
												],
												"src": "973:373:2"
											},
											{
												"body": {
													"nativeSrc": "1468:193:2",
													"nodeType": "YulBlock",
													"src": "1468:193:2",
													"statements": [
														{
															"nativeSrc": "1478:26:2",
															"nodeType": "YulAssignment",
															"src": "1478:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1490:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1490:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1501:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1486:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:2"
																},
																"nativeSrc": "1486:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1486:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1478:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1478:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1525:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1536:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1536:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1521:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:2"
																		},
																		"nativeSrc": "1521:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1521:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1544:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "1544:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1540:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:2"
																		},
																		"nativeSrc": "1540:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1514:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:2"
																},
																"nativeSrc": "1514:47:2",
																"nodeType": "YulFunctionCall",
																"src": "1514:47:2"
															},
															"nativeSrc": "1514:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "1514:47:2"
														},
														{
															"nativeSrc": "1570:84:2",
															"nodeType": "YulAssignment",
															"src": "1570:84:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1640:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1640:6:2"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1649:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1649:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "1578:61:2",
																	"nodeType": "YulIdentifier",
																	"src": "1578:61:2"
																},
																"nativeSrc": "1578:76:2",
																"nodeType": "YulFunctionCall",
																"src": "1578:76:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1570:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "1352:309:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1440:9:2",
														"nodeType": "YulTypedName",
														"src": "1440:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1452:6:2",
														"nodeType": "YulTypedName",
														"src": "1452:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1463:4:2",
														"nodeType": "YulTypedName",
														"src": "1463:4:2",
														"type": ""
													}
												],
												"src": "1352:309:2"
											},
											{
												"body": {
													"nativeSrc": "1707:35:2",
													"nodeType": "YulBlock",
													"src": "1707:35:2",
													"statements": [
														{
															"nativeSrc": "1717:19:2",
															"nodeType": "YulAssignment",
															"src": "1717:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1733:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1733:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1727:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1727:5:2"
																},
																"nativeSrc": "1727:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1727:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1717:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1667:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1700:6:2",
														"nodeType": "YulTypedName",
														"src": "1700:6:2",
														"type": ""
													}
												],
												"src": "1667:75:2"
											},
											{
												"body": {
													"nativeSrc": "1837:28:2",
													"nodeType": "YulBlock",
													"src": "1837:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1854:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1857:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1857:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1847:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:2"
																},
																"nativeSrc": "1847:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1847:12:2"
															},
															"nativeSrc": "1847:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1847:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1748:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1748:117:2"
											},
											{
												"body": {
													"nativeSrc": "1960:28:2",
													"nodeType": "YulBlock",
													"src": "1960:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1977:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1977:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1970:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:2"
																},
																"nativeSrc": "1970:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1970:12:2"
															},
															"nativeSrc": "1970:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1970:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1871:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1871:117:2"
											},
											{
												"body": {
													"nativeSrc": "2037:79:2",
													"nodeType": "YulBlock",
													"src": "2037:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2094:16:2",
																"nodeType": "YulBlock",
																"src": "2094:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2103:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2106:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2106:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2096:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2096:6:2"
																			},
																			"nativeSrc": "2096:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2096:12:2"
																		},
																		"nativeSrc": "2096:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2060:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2060:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2085:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2085:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2067:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "2067:17:2"
																				},
																				"nativeSrc": "2067:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2067:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2057:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2057:2:2"
																		},
																		"nativeSrc": "2057:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2057:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2050:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:2"
																},
																"nativeSrc": "2050:43:2",
																"nodeType": "YulFunctionCall",
																"src": "2050:43:2"
															},
															"nativeSrc": "2047:63:2",
															"nodeType": "YulIf",
															"src": "2047:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1994:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2030:5:2",
														"nodeType": "YulTypedName",
														"src": "2030:5:2",
														"type": ""
													}
												],
												"src": "1994:122:2"
											},
											{
												"body": {
													"nativeSrc": "2174:87:2",
													"nodeType": "YulBlock",
													"src": "2174:87:2",
													"statements": [
														{
															"nativeSrc": "2184:29:2",
															"nodeType": "YulAssignment",
															"src": "2184:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2206:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2206:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2193:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "2193:12:2"
																},
																"nativeSrc": "2193:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2193:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2184:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2184:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2249:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2249:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2222:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "2222:26:2"
																},
																"nativeSrc": "2222:33:2",
																"nodeType": "YulFunctionCall",
																"src": "2222:33:2"
															},
															"nativeSrc": "2222:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "2222:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2122:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2152:6:2",
														"nodeType": "YulTypedName",
														"src": "2152:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2160:3:2",
														"nodeType": "YulTypedName",
														"src": "2160:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2168:5:2",
														"nodeType": "YulTypedName",
														"src": "2168:5:2",
														"type": ""
													}
												],
												"src": "2122:139:2"
											},
											{
												"body": {
													"nativeSrc": "2333:263:2",
													"nodeType": "YulBlock",
													"src": "2333:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2379:83:2",
																"nodeType": "YulBlock",
																"src": "2379:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2381:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2381:77:2"
																			},
																			"nativeSrc": "2381:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2381:79:2"
																		},
																		"nativeSrc": "2381:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2381:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2354:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2354:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2350:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:2"
																		},
																		"nativeSrc": "2350:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2350:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2375:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2346:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:2"
																},
																"nativeSrc": "2346:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2346:32:2"
															},
															"nativeSrc": "2343:119:2",
															"nodeType": "YulIf",
															"src": "2343:119:2"
														},
														{
															"nativeSrc": "2472:117:2",
															"nodeType": "YulBlock",
															"src": "2472:117:2",
															"statements": [
																{
																	"nativeSrc": "2487:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2487:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2501:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2501:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2491:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2491:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2516:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2516:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2551:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2551:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2562:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2562:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2547:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2547:3:2"
																				},
																				"nativeSrc": "2547:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2547:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2571:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2571:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2526:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2526:20:2"
																		},
																		"nativeSrc": "2526:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2516:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2516:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2267:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2303:9:2",
														"nodeType": "YulTypedName",
														"src": "2303:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2314:7:2",
														"nodeType": "YulTypedName",
														"src": "2314:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2326:6:2",
														"nodeType": "YulTypedName",
														"src": "2326:6:2",
														"type": ""
													}
												],
												"src": "2267:329:2"
											},
											{
												"body": {
													"nativeSrc": "2630:152:2",
													"nodeType": "YulBlock",
													"src": "2630:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2650:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2640:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:2"
																},
																"nativeSrc": "2640:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2640:88:2"
															},
															"nativeSrc": "2640:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2640:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2747:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:2"
																},
																"nativeSrc": "2737:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2737:15:2"
															},
															"nativeSrc": "2737:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2737:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2771:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2761:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:2"
																},
																"nativeSrc": "2761:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2761:15:2"
															},
															"nativeSrc": "2761:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2761:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2602:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2602:180:2"
											},
											{
												"body": {
													"nativeSrc": "2832:147:2",
													"nodeType": "YulBlock",
													"src": "2832:147:2",
													"statements": [
														{
															"nativeSrc": "2842:25:2",
															"nodeType": "YulAssignment",
															"src": "2842:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2865:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2865:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2847:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2847:17:2"
																},
																"nativeSrc": "2847:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2847:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2842:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2842:1:2"
																}
															]
														},
														{
															"nativeSrc": "2876:25:2",
															"nodeType": "YulAssignment",
															"src": "2876:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2899:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2899:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2881:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2881:17:2"
																},
																"nativeSrc": "2881:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2881:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2876:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2876:1:2"
																}
															]
														},
														{
															"nativeSrc": "2910:16:2",
															"nodeType": "YulAssignment",
															"src": "2910:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2921:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2921:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2924:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2924:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2917:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2917:3:2"
																},
																"nativeSrc": "2917:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2917:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2910:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2910:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2950:22:2",
																"nodeType": "YulBlock",
																"src": "2950:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2952:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2952:16:2"
																			},
																			"nativeSrc": "2952:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2952:18:2"
																		},
																		"nativeSrc": "2952:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2952:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2942:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2942:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2945:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2945:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2939:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2939:2:2"
																},
																"nativeSrc": "2939:10:2",
																"nodeType": "YulFunctionCall",
																"src": "2939:10:2"
															},
															"nativeSrc": "2936:36:2",
															"nodeType": "YulIf",
															"src": "2936:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2788:191:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2819:1:2",
														"nodeType": "YulTypedName",
														"src": "2819:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2822:1:2",
														"nodeType": "YulTypedName",
														"src": "2822:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2828:3:2",
														"nodeType": "YulTypedName",
														"src": "2828:3:2",
														"type": ""
													}
												],
												"src": "2788:191:2"
											},
											{
												"body": {
													"nativeSrc": "3038:32:2",
													"nodeType": "YulBlock",
													"src": "3038:32:2",
													"statements": [
														{
															"nativeSrc": "3048:16:2",
															"nodeType": "YulAssignment",
															"src": "3048:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "3059:5:2",
																"nodeType": "YulIdentifier",
																"src": "3059:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3048:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3048:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "2985:85:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:2",
														"nodeType": "YulTypedName",
														"src": "3020:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3030:7:2",
														"nodeType": "YulTypedName",
														"src": "3030:7:2",
														"type": ""
													}
												],
												"src": "2985:85:2"
											},
											{
												"body": {
													"nativeSrc": "3119:43:2",
													"nodeType": "YulBlock",
													"src": "3119:43:2",
													"statements": [
														{
															"nativeSrc": "3129:27:2",
															"nodeType": "YulAssignment",
															"src": "3129:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3144:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3144:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3151:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3151:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3140:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3140:3:2"
																},
																"nativeSrc": "3140:16:2",
																"nodeType": "YulFunctionCall",
																"src": "3140:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3129:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3129:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3076:86:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3101:5:2",
														"nodeType": "YulTypedName",
														"src": "3101:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3111:7:2",
														"nodeType": "YulTypedName",
														"src": "3111:7:2",
														"type": ""
													}
												],
												"src": "3076:86:2"
											},
											{
												"body": {
													"nativeSrc": "3200:28:2",
													"nodeType": "YulBlock",
													"src": "3200:28:2",
													"statements": [
														{
															"nativeSrc": "3210:12:2",
															"nodeType": "YulAssignment",
															"src": "3210:12:2",
															"value": {
																"name": "value",
																"nativeSrc": "3217:5:2",
																"nodeType": "YulIdentifier",
																"src": "3217:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3210:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3210:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3168:60:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3186:5:2",
														"nodeType": "YulTypedName",
														"src": "3186:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3196:3:2",
														"nodeType": "YulTypedName",
														"src": "3196:3:2",
														"type": ""
													}
												],
												"src": "3168:60:2"
											},
											{
												"body": {
													"nativeSrc": "3300:88:2",
													"nodeType": "YulBlock",
													"src": "3300:88:2",
													"statements": [
														{
															"nativeSrc": "3310:72:2",
															"nodeType": "YulAssignment",
															"src": "3310:72:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3374:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "3374:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "3348:25:2",
																					"nodeType": "YulIdentifier",
																					"src": "3348:25:2"
																				},
																				"nativeSrc": "3348:32:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3348:32:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3339:8:2",
																			"nodeType": "YulIdentifier",
																			"src": "3339:8:2"
																		},
																		"nativeSrc": "3339:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3339:42:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "3323:15:2",
																	"nodeType": "YulIdentifier",
																	"src": "3323:15:2"
																},
																"nativeSrc": "3323:59:2",
																"nodeType": "YulFunctionCall",
																"src": "3323:59:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3310:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "3310:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nativeSrc": "3234:154:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3280:5:2",
														"nodeType": "YulTypedName",
														"src": "3280:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3290:9:2",
														"nodeType": "YulTypedName",
														"src": "3290:9:2",
														"type": ""
													}
												],
												"src": "3234:154:2"
											},
											{
												"body": {
													"nativeSrc": "3465:72:2",
													"nodeType": "YulBlock",
													"src": "3465:72:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3482:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3482:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3524:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3524:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nativeSrc": "3487:36:2",
																			"nodeType": "YulIdentifier",
																			"src": "3487:36:2"
																		},
																		"nativeSrc": "3487:43:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3487:43:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3475:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3475:6:2"
																},
																"nativeSrc": "3475:56:2",
																"nodeType": "YulFunctionCall",
																"src": "3475:56:2"
															},
															"nativeSrc": "3475:56:2",
															"nodeType": "YulExpressionStatement",
															"src": "3475:56:2"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nativeSrc": "3394:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3453:5:2",
														"nodeType": "YulTypedName",
														"src": "3453:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3460:3:2",
														"nodeType": "YulTypedName",
														"src": "3460:3:2",
														"type": ""
													}
												],
												"src": "3394:143:2"
											},
											{
												"body": {
													"nativeSrc": "3647:130:2",
													"nodeType": "YulBlock",
													"src": "3647:130:2",
													"statements": [
														{
															"nativeSrc": "3657:26:2",
															"nodeType": "YulAssignment",
															"src": "3657:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3669:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3669:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3680:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3680:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3665:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:2"
																},
																"nativeSrc": "3665:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3665:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3657:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3657:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3743:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3743:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3756:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3756:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3767:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3767:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3752:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:2"
																		},
																		"nativeSrc": "3752:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nativeSrc": "3693:49:2",
																	"nodeType": "YulIdentifier",
																	"src": "3693:49:2"
																},
																"nativeSrc": "3693:77:2",
																"nodeType": "YulFunctionCall",
																"src": "3693:77:2"
															},
															"nativeSrc": "3693:77:2",
															"nodeType": "YulExpressionStatement",
															"src": "3693:77:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3543:234:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3619:9:2",
														"nodeType": "YulTypedName",
														"src": "3619:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3631:6:2",
														"nodeType": "YulTypedName",
														"src": "3631:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3642:4:2",
														"nodeType": "YulTypedName",
														"src": "3642:4:2",
														"type": ""
													}
												],
												"src": "3543:234:2"
											},
											{
												"body": {
													"nativeSrc": "3827:57:2",
													"nodeType": "YulBlock",
													"src": "3827:57:2",
													"statements": [
														{
															"nativeSrc": "3837:41:2",
															"nodeType": "YulAssignment",
															"src": "3837:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3852:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3852:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3859:18:2",
																		"nodeType": "YulLiteral",
																		"src": "3859:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3848:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3848:3:2"
																},
																"nativeSrc": "3848:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3848:30:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3837:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3837:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "3783:101:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3809:5:2",
														"nodeType": "YulTypedName",
														"src": "3809:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3819:7:2",
														"nodeType": "YulTypedName",
														"src": "3819:7:2",
														"type": ""
													}
												],
												"src": "3783:101:2"
											},
											{
												"body": {
													"nativeSrc": "3957:89:2",
													"nodeType": "YulBlock",
													"src": "3957:89:2",
													"statements": [
														{
															"nativeSrc": "3967:73:2",
															"nodeType": "YulAssignment",
															"src": "3967:73:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4032:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "4032:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "4006:25:2",
																					"nodeType": "YulIdentifier",
																					"src": "4006:25:2"
																				},
																				"nativeSrc": "4006:32:2",
																				"nodeType": "YulFunctionCall",
																				"src": "4006:32:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3997:8:2",
																			"nodeType": "YulIdentifier",
																			"src": "3997:8:2"
																		},
																		"nativeSrc": "3997:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3997:42:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "3980:16:2",
																	"nodeType": "YulIdentifier",
																	"src": "3980:16:2"
																},
																"nativeSrc": "3980:60:2",
																"nodeType": "YulFunctionCall",
																"src": "3980:60:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3967:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "3967:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "3890:156:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3937:5:2",
														"nodeType": "YulTypedName",
														"src": "3937:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3947:9:2",
														"nodeType": "YulTypedName",
														"src": "3947:9:2",
														"type": ""
													}
												],
												"src": "3890:156:2"
											},
											{
												"body": {
													"nativeSrc": "4124:73:2",
													"nodeType": "YulBlock",
													"src": "4124:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4141:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4184:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "4184:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "4146:37:2",
																			"nodeType": "YulIdentifier",
																			"src": "4146:37:2"
																		},
																		"nativeSrc": "4146:44:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4146:44:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4134:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:2"
																},
																"nativeSrc": "4134:57:2",
																"nodeType": "YulFunctionCall",
																"src": "4134:57:2"
															},
															"nativeSrc": "4134:57:2",
															"nodeType": "YulExpressionStatement",
															"src": "4134:57:2"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "4052:145:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4112:5:2",
														"nodeType": "YulTypedName",
														"src": "4112:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4119:3:2",
														"nodeType": "YulTypedName",
														"src": "4119:3:2",
														"type": ""
													}
												],
												"src": "4052:145:2"
											},
											{
												"body": {
													"nativeSrc": "4308:131:2",
													"nodeType": "YulBlock",
													"src": "4308:131:2",
													"statements": [
														{
															"nativeSrc": "4318:26:2",
															"nodeType": "YulAssignment",
															"src": "4318:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4330:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4341:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4341:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4326:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:2"
																},
																"nativeSrc": "4326:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4326:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4318:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4405:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4405:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4418:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4418:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4429:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4429:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4414:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4414:3:2"
																		},
																		"nativeSrc": "4414:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4414:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "4354:50:2",
																	"nodeType": "YulIdentifier",
																	"src": "4354:50:2"
																},
																"nativeSrc": "4354:78:2",
																"nodeType": "YulFunctionCall",
																"src": "4354:78:2"
															},
															"nativeSrc": "4354:78:2",
															"nodeType": "YulExpressionStatement",
															"src": "4354:78:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "4203:236:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4280:9:2",
														"nodeType": "YulTypedName",
														"src": "4280:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4292:6:2",
														"nodeType": "YulTypedName",
														"src": "4292:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4303:4:2",
														"nodeType": "YulTypedName",
														"src": "4303:4:2",
														"type": ""
													}
												],
												"src": "4203:236:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630c55699c1461004e57806328b5e32b1461006c57806375beac8714610076578063fe4b84df14610094575b5f80fd5b6100566100b0565b6040516100639190610305565b60405180910390f35b6100746100b5565b005b61007e6100ca565b60405161008b919061038e565b60405180910390f35b6100ae60048036038101906100a991906103dc565b610148565b005b5f5481565b60015f546100c39190610434565b5f81905550565b606063fe4b84df60e01b60016040516024016100e691906104b5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905090565b5f6101516102c6565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156101995750825b90505f60018367ffffffffffffffff161480156101cc57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156101da575080155b15610211576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561025e576001855f0160086101000a81548160ff0219169083151502179055505b855f8190555083156102be575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516102b59190610511565b60405180910390a15b505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f819050919050565b6102ff816102ed565b82525050565b5f6020820190506103185f8301846102f6565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6103608261031e565b61036a8185610328565b935061037a818560208601610338565b61038381610346565b840191505092915050565b5f6020820190508181035f8301526103a68184610356565b905092915050565b5f80fd5b6103bb816102ed565b81146103c5575f80fd5b50565b5f813590506103d6816103b2565b92915050565b5f602082840312156103f1576103f06103ae565b5b5f6103fe848285016103c8565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61043e826102ed565b9150610449836102ed565b925082820190508082111561046157610460610407565b5b92915050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61049f61049a61049584610467565b61047c565b610470565b9050919050565b6104af81610485565b82525050565b5f6020820190506104c85f8301846104a6565b92915050565b5f67ffffffffffffffff82169050919050565b5f6104fb6104f66104f184610467565b61047c565b6104ce565b9050919050565b61050b816104e1565b82525050565b5f6020820190506105245f830184610502565b9291505056fea2646970667358221220121333edb54492846cdd486af3e21ee881f97e340413818406417aa01c10af3164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x28B5E32B EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x75BEAC87 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0xCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH4 0xFE4B84DF PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x151 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x199 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1CC JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1DA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x25E JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2BE JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FF DUP2 PUSH2 0x2ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x318 PUSH0 DUP4 ADD DUP5 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x360 DUP3 PUSH2 0x31E JUMP JUMPDEST PUSH2 0x36A DUP2 DUP6 PUSH2 0x328 JUMP JUMPDEST SWAP4 POP PUSH2 0x37A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x338 JUMP JUMPDEST PUSH2 0x383 DUP2 PUSH2 0x346 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3A6 DUP2 DUP5 PUSH2 0x356 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3BB DUP2 PUSH2 0x2ED JUMP JUMPDEST DUP2 EQ PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D6 DUP2 PUSH2 0x3B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F1 JUMPI PUSH2 0x3F0 PUSH2 0x3AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FE DUP5 DUP3 DUP6 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x43E DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP2 POP PUSH2 0x449 DUP4 PUSH2 0x2ED JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x407 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x49F PUSH2 0x49A PUSH2 0x495 DUP5 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AF DUP2 PUSH2 0x485 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x4A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4FB PUSH2 0x4F6 PUSH2 0x4F1 DUP5 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50B DUP2 PUSH2 0x4E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x524 PUSH0 DUP4 ADD DUP5 PUSH2 0x502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SGT CALLER 0xED 0xB5 PREVRANDAO SWAP3 DUP5 PUSH13 0xDD486AF3E21EE881F97E340413 DUP2 DUP5 MOD COINBASE PUSH27 0xA01C10AF3164736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "121:340:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;159:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;268:51;;;:::i;:::-;;325:134;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;182:80;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;159:16;;;;:::o;268:51::-;311:1;307;;:5;;;;:::i;:::-;303:1;:9;;;;268:51::o;325:134::-;370:12;424:24;;;450:1;401:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;394:58;;325:134;:::o;182:80::-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;251:4:1::1;247:1;:8;;;;5070:14:0::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;182:80:1;:::o;8737:170:0:-;8795:30;8870:21;8860:31;;8737:170;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:98::-;493:6;527:5;521:12;511:22;;442:98;;;:::o;546:168::-;629:11;663:6;658:3;651:19;703:4;698:3;694:14;679:29;;546:168;;;;:::o;720:139::-;809:6;804:3;799;793:23;850:1;841:6;836:3;832:16;825:27;720:139;;;:::o;865:102::-;906:6;957:2;953:7;948:2;941:5;937:14;933:28;923:38;;865:102;;;:::o;973:373::-;1059:3;1087:38;1119:5;1087:38;:::i;:::-;1141:70;1204:6;1199:3;1141:70;:::i;:::-;1134:77;;1220:65;1278:6;1273:3;1266:4;1259:5;1255:16;1220:65;:::i;:::-;1310:29;1332:6;1310:29;:::i;:::-;1305:3;1301:39;1294:46;;1063:283;973:373;;;;:::o;1352:309::-;1463:4;1501:2;1490:9;1486:18;1478:26;;1550:9;1544:4;1540:20;1536:1;1525:9;1521:17;1514:47;1578:76;1649:4;1640:6;1578:76;:::i;:::-;1570:84;;1352:309;;;;:::o;1748:117::-;1857:1;1854;1847:12;1994:122;2067:24;2085:5;2067:24;:::i;:::-;2060:5;2057:35;2047:63;;2106:1;2103;2096:12;2047:63;1994:122;:::o;2122:139::-;2168:5;2206:6;2193:20;2184:29;;2222:33;2249:5;2222:33;:::i;:::-;2122:139;;;;:::o;2267:329::-;2326:6;2375:2;2363:9;2354:7;2350:23;2346:32;2343:119;;;2381:79;;:::i;:::-;2343:119;2501:1;2526:53;2571:7;2562:6;2551:9;2547:22;2526:53;:::i;:::-;2516:63;;2472:117;2267:329;;;;:::o;2602:180::-;2650:77;2647:1;2640:88;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2788:191;2828:3;2847:20;2865:1;2847:20;:::i;:::-;2842:25;;2881:20;2899:1;2881:20;:::i;:::-;2876:25;;2924:1;2921;2917:9;2910:16;;2945:3;2942:1;2939:10;2936:36;;;2952:18;;:::i;:::-;2936:36;2788:191;;;;:::o;2985:85::-;3030:7;3059:5;3048:16;;2985:85;;;:::o;3076:86::-;3111:7;3151:4;3144:5;3140:16;3129:27;;3076:86;;;:::o;3168:60::-;3196:3;3217:5;3210:12;;3168:60;;;:::o;3234:154::-;3290:9;3323:59;3339:42;3348:32;3374:5;3348:32;:::i;:::-;3339:42;:::i;:::-;3323:59;:::i;:::-;3310:72;;3234:154;;;:::o;3394:143::-;3487:43;3524:5;3487:43;:::i;:::-;3482:3;3475:56;3394:143;;:::o;3543:234::-;3642:4;3680:2;3669:9;3665:18;3657:26;;3693:77;3767:1;3756:9;3752:17;3743:6;3693:77;:::i;:::-;3543:234;;;;:::o;3783:101::-;3819:7;3859:18;3852:5;3848:30;3837:41;;3783:101;;;:::o;3890:156::-;3947:9;3980:60;3997:42;4006:32;4032:5;4006:32;:::i;:::-;3997:42;:::i;:::-;3980:60;:::i;:::-;3967:73;;3890:156;;;:::o;4052:145::-;4146:44;4184:5;4146:44;:::i;:::-;4141:3;4134:57;4052:145;;:::o;4203:236::-;4303:4;4341:2;4330:9;4326:18;4318:26;;4354:78;4429:1;4418:9;4414:17;4405:6;4354:78;:::i;:::-;4203:236;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "275200",
								"executionCost": "310",
								"totalCost": "275510"
							},
							"external": {
								"call()": "infinite",
								"initialize(uint256)": "103995",
								"showInvoke()": "infinite",
								"x()": "2402"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 121,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 461,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220121333edb54492846cdd486af3e21ee881f97e340413818406417aa01c10af3164736f6c634300081a0033",
									".code": [
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "C55699C"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "28B5E32B"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "75BEAC87"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "FE4B84DF"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 461,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 159,
											"end": 175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 159,
											"end": 175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 268,
											"end": 319,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 268,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 268,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 319,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 268,
											"end": 319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 319,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 325,
											"end": 459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 325,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 325,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 325,
											"end": 459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 459,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 325,
											"end": 459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 325,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 325,
											"end": 459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 459,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 182,
											"end": 262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 182,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 182,
											"end": 262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 182,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 182,
											"end": 262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 182,
											"end": 262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 159,
											"end": 175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 319,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 268,
											"end": 319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 311,
											"end": 312,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 307,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 307,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 307,
											"end": 312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 307,
											"end": 312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 307,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 307,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 307,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 307,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 303,
											"end": 304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 303,
											"end": 312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 303,
											"end": 312,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 303,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 325,
											"end": 459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "FE4B84DF"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 450,
											"end": 451,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 401,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 394,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 325,
											"end": 459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 255,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 247,
											"end": 248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 255,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 247,
											"end": 255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 540,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 442,
											"end": 540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 493,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 521,
											"end": 533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 546,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 546,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 658,
											"end": 661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 651,
											"end": 670,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 703,
											"end": 707,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 694,
											"end": 708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 679,
											"end": 708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 679,
											"end": 708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 546,
											"end": 714,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 546,
											"end": 714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 546,
											"end": 714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 546,
											"end": 714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 546,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 720,
											"end": 859,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 720,
											"end": 859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 804,
											"end": 807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 799,
											"end": 802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "MCOPY",
											"source": 2
										},
										{
											"begin": 850,
											"end": 851,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 847,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 839,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 832,
											"end": 848,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 852,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 720,
											"end": 859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 720,
											"end": 859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 720,
											"end": 859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 720,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 967,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 865,
											"end": 967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 906,
											"end": 912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 948,
											"end": 950,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 933,
											"end": 961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 923,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 923,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 865,
											"end": 967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1346,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 973,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1087,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1087,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1141,
											"end": 1211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1211,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1276,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1220,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1285,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1220,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1310,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1310,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1308,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1346,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1661,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1352,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1560,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1561,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1578,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1654,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1578,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1661,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1865,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1748,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1859,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2092,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2108,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2213,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2222,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2373,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2381,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2571,
											"end": 2578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2526,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2782,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2602,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2727,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2751,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2737,
											"end": 2752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2901,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2881,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2901,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2942,
											"end": 2943,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 2949,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2952,
											"end": 2970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3162,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3076,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3155,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3228,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3168,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3228,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3234,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3290,
											"end": 3299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3339,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3348,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3374,
											"end": 3379,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3348,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3348,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3339,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3339,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3339,
											"end": 3381,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3339,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3323,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3382,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3323,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3537,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3394,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3524,
											"end": 3529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3487,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3530,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3487,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3749,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3693,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3783,
											"end": 3884,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3783,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 3878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 3878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3783,
											"end": 3884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3783,
											"end": 3884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3783,
											"end": 3884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3783,
											"end": 3884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 4046,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3890,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3997,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4006,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4032,
											"end": 4037,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4006,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4038,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4006,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3997,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3997,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3997,
											"end": 4039,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3997,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3980,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4040,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3980,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 4046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 4046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 4046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 4046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4197,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4052,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4184,
											"end": 4189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4146,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4190,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4146,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4191,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4439,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4203,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4318,
											"end": 4344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4318,
											"end": 4344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4354,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4405,
											"end": 4411,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4354,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4354,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4354,
											"end": 4432,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4354,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4439,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"contracts/BoxV1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"call()": "28b5e32b",
							"initialize(uint256)": "fe4b84df",
							"showInvoke()": "75beac87",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showInvoke\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BoxV1.sol\":\"BoxV1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"contracts/BoxV1.sol\":{\"keccak256\":\"0x5cfc91b4388da8affacf7b11a94e55f71a98c25019c4728b54418aec7e533942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973b4e530a3a31bd335a7943ad8361d4c6e0e9658d7916afa7cfb6966724cc74\",\"dweb:/ipfs/QmQ5NxonBnoWS9zYKd7ivvgHCWfTZk4wZRQNTJQp5ZyUYB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 260,
								"contract": "contracts/BoxV1.sol:BoxV1",
								"label": "x",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						]
					},
					"id": 254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4726:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4746:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4770:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4851:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4887:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4908:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4901:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4983:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4979:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4999:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5013:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5066:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5086:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5137:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6291:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6357:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6357:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6357:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6390:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6431:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6450:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6427:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6477:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6498:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6491:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6618:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6651:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6261:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6252:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6921:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:0"
									},
									"src": "6893:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7136:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7151:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7146:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7170:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7191:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7184:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:0"
									},
									"scope": 253,
									"src": "7084:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7760:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7826:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7826:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7859:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7900:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7896:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7917:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7931:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7981:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8021:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8035:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8087:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8082:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:0"
									},
									"scope": 253,
									"src": "7711:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8308:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8325:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8325:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8318:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8300:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:0"
									},
									"scope": 253,
									"src": "8243:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8543:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8553:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:0"
									},
									"scope": 253,
									"src": "8487:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8827:80:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:0",
													"nodeType": "YulBlock",
													"src": "8846:55:0",
													"statements": [
														{
															"nativeSrc": "8860:31:0",
															"nodeType": "YulAssignment",
															"src": "8860:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:0",
																"nodeType": "YulIdentifier",
																"src": "8870:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8837:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8795:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8795:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:0"
									},
									"scope": 253,
									"src": "8737:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 254,
							"src": "2349:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:8797:0"
				},
				"id": 0
			},
			"contracts/BoxV1.sol": {
				"ast": {
					"absolutePath": "contracts/BoxV1.sol",
					"exportedSymbols": {
						"BoxV1": [
							297
						],
						"Initializable": [
							253
						]
					},
					"id": 298,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 255,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 298,
							"sourceUnit": 254,
							"src": "56:63:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 257,
										"name": "Initializable",
										"nameLocations": [
											"139:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "139:13:1"
									},
									"id": 258,
									"nodeType": "InheritanceSpecifier",
									"src": "139:13:1"
								}
							],
							"canonicalName": "BoxV1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 297,
							"linearizedBaseContracts": [
								297,
								253
							],
							"name": "BoxV1",
							"nameLocation": "130:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0c55699c",
									"id": 260,
									"mutability": "mutable",
									"name": "x",
									"nameLocation": "174:1:1",
									"nodeType": "VariableDeclaration",
									"scope": 297,
									"src": "159:16:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "159:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "237:25:1",
										"statements": [
											{
												"expression": {
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 267,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "247:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 268,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "251:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "247:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "247:8:1"
											}
										]
									},
									"functionSelector": "fe4b84df",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 265,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 264,
												"name": "initializer",
												"nameLocations": [
													"225:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "225:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "225:11:1"
										}
									],
									"name": "initialize",
									"nameLocation": "191:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "_val",
												"nameLocation": "210:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "202:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:14:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:0:1"
									},
									"scope": 297,
									"src": "182:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "293:26:1",
										"statements": [
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 275,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "303:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 276,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "307:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "311:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "307:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "303:9:1"
											}
										]
									},
									"functionSelector": "28b5e32b",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "call",
									"nameLocation": "277:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:0:1"
									},
									"scope": 297,
									"src": "268:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "384:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 289,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "424:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BoxV1_$297",
																		"typeString": "contract BoxV1"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "429:10:1",
																"memberName": "initialize",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 272,
																"src": "424:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																	"typeString": "function (uint256) external"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "440:8:1",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "424:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "31",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "450:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 287,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "401:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "405:18:1",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "401:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "401:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 286,
												"id": 294,
												"nodeType": "Return",
												"src": "394:58:1"
											}
										]
									},
									"functionSelector": "75beac87",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showInvoke",
									"nameLocation": "334:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:2:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "370:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "370:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:14:1"
									},
									"scope": 297,
									"src": "325:134:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 298,
							"src": "121:340:1",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:430:1"
				},
				"id": 1
			}
		}
	}
}